name: NuGet audit

on:
  workflow_call:
    secrets:
      FUNCTIONS_AUTHKEY:
        required: true
      PROCESSNUGETAUDITRESULTS_URL:
        required: true

jobs:
  nuget-audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.3.0
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4.1.0
        with:
          global-json-file: global.json
      - name: .NET Restore
        id: restore
        shell: bash        
        run: |
          mkdir ${{ github.workspace }}/results
          touch ${{ github.workspace }}/results/dotnetrestore.log
          set +e +o pipefail
          CVECOUNT=$(dotnet restore src | tee ${{ github.workspace }}/results/dotnetrestore.log | grep -c -e "NU190[1-4]")
          set -e -o pipefail
          while read -r line; do
            echo "$line"
          done < ${{ github.workspace }}/results/dotnetrestore.log
          exit $CVECOUNT
      - name: Upload results on failure
        if: ${{ failure() }}
        shell: bash
        working-directory: ./src
        run: |
          (dotnet list package --vulnerable --include-transitive --format json | jq '{"vulnerabilities": .}'; jq -s '{ "projectAssets": .}' */obj/project.assets.json) | jq -s add >> ${{ github.workspace }}/results/restoreData.json
          curl -X POST \
             -F "repository_id=${{ github.repository_id }}" \
             -F "branch=${{ github.ref_name }}" \
             -F "commit=${{ github.sha }}" \
             -F "restoreDataFile=@${{ github.workspace }}/results/restoreData.json" \
             -H "x-functions-key: ${{ secrets.FUNCTIONS_AUTHKEY }}" \
             ${{ secrets.PROCESSNUGETAUDITRESULTS_URL }}
      - name: Archive files on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: files
          path: ${{ github.workspace }}/results/
